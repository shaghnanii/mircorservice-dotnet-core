networks:
  backend: 

services:
  
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Docker@Secret123
    networks:
      - backend
    ports:
      - 8001:1433

  customerwebapi:
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile
    networks:
      - backend
    ports:
      - 8002:8080
    environment:
      - DB_HOST=customerdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=Docker@Secret123

  productdb:
    container_name: product-db
    image: mysql:8.0.29-oracle
    environment:
      - MYSQL_ROOT_PASSWORD=Docker@Secret123
    ports:
      - 8003:3306
  
  productwebapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    networks:
      - backend
    ports:
      - 8004:8080
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_product
      - DB_ROOT_PASSWORD=Docker@Secret123
  
  orderdb:
    container_name: order-db
    image: mongo
    ports:
      - 8005:27017
    networks:
      - backend
  
  orderwebapi:
    container_name: order-api
    image: ${DOCKER_REGISTRY-}orderwebapi
    build:
      context: .
      dockerfile: OrderWebApi/Dockerfile
    ports:
      - 8006:8081
    networks:
      - backend
    environment:
      - DB_HOST=orderdb
      - DB_NAME=dms_order
